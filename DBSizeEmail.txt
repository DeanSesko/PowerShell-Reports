add-pssnapin Microsoft.Exchange.Management.PowerShell.E2010


Clear-variable Report
Clear-variable Report2
Clear-variable Messagebody


$FromAddress = "DeanSesko@planetsesko.com"
$ToAddress = "DeanSesko@planetSesko.com"
$MessageSubject = "Exchange Mailbox Info"
$MessageBody = ""
$SMTPsmartHost = "192.168.1.212"


$a = "<style>"
$a = $a + "TABLE{border-width: 1px;border-style: solid;border-color: black;border-collapse: collapse;}"
$a = $a + "TH{border-width: 1px;padding: 1px;border-style: solid;border-color: black;}"
$a = $a + "TD{border-width: 1px;padding: 5px;border-style: solid;border-color: black;}"
$a = $a + "</style>"
$MYDatabases = Get-MailBoxDatabase



$report = @()

foreach ($DB in
$MYDatabases)
{
Clear-variable count
$count=(get-mailbox -database $db.name |measure-object)
[string]$DBPathString = $db.EDBFILEpath
# Build Database File Path
$MyDriveString =$DBPathString.substring(0,1);
$MySubString=$DBPathString.substring(0,2);
$UNCPath = “\\$($db.Server)\” + $MyDriveString + “$” ;
$Shell = new-object -com Shell.Application;
$UNCDBPath =  $DBPathString.Replace($MySubString,$UNCPath);
$drives = Get-WmiObject -ComputerName $DB.Server Win32_LogicalDisk |
Where-Object {$_.DeviceID -eq $MyDriveString +”:”}
foreach($drive in $drives)
{
$size1 = $drive.size / 1GB
$size = “{0:N2}” -f $size1
$size = $size + ” GB”
$free1 = $drive.freespace / 1GB
$free = “{0:N2}” -f $free1
$free = $free + ” GB”
}
#Get File Info
$DBFiles = get-childitem -path $UNCDBPath;
[decimal]$GBSize = ($DBFiles | Measure-Object -Property Length -Sum).Sum;
[decimal]$GBSize = $GBSize/1073741824;
$DBFILESIZE = “{0:N2}”-f $GBSize;
$DBFILESIZe = $DBFILESIZE + “GB”;
# Output info
$MyData = New-Object Object;
$MyData | Add-Member NoteProperty "Database Name" $DB.Name;
$MyData | Add-Member NoteProperty "Mounted on Server" $DB.Server;
$MyData | Add-Member NoteProperty "User Count" $count.count;
$MyData | Add-Member NoteProperty Size $DBFILESIZE;
$MyData | Add-Member NoteProperty “Lun Size” $size;
$MyData | Add-Member NoteProperty “Free Space” $free;
$report += $MyData
}
[String]$messagebody +="Mailbox Database Users"
[String]$messagebody +=  "<br> " 
[String]$messagebody +=  " <br> " 
[String]$messagebody +=$report |ConvertTo-Html -head $a
[String]$messagebody +=  "<br> " 
[String]$messagebody +=  " <br> " 
[String]$messagebody +=  "<br> " 
[String]$messagebody +=  " <br> " 
[String]$messagebody +="Mailbox Database Copy Status"
[String]$messagebody +=  "<br> " 
[String]$messagebody +=  " <br> " 
[String]$Report2 += Get-MailboxDatabase | Get-MailboxDatabaseCopyStatus |select-object @{n="Server";e={$_.MailboxServer}},DatabaseName,Status, @{n="Copy Queue";e={$_.CopyQueuelength}}, @{n="Replay Queue";e={$_.ReplayQueueLength}},@{n="Index state";e={$_.ContentindexState}}  | ConvertTo-Html -head $a
[String]$messagebody +=$report2 
send-MailMessage -Body $messagebody -BodyAsHtml -SmtpServer $SMTPSmartHost -Subject $MessageSubject -from $fromAddress -to $toAddress


 